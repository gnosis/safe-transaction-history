name: Python package
on: push

jobs:
  safe-transaction-service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      postgres:
        image: postgres:10
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Setup ganache
      run: |
        docker run --detach --publish 8545:8545 --network-alias ganache -e DOCKER=true trufflesuite/ganache-cli:latest --defaultBalanceEther 10000 --gasLimit 10000000 -a 30 --noVMErrorsOnRPCResponse -d
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
    - uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ hashFiles('requirements-test.txt') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      run: |
        pipenv install -r requirements-test.txt
        pipenv install coveralls
      env:
        PIP_USE_MIRRORS: true
    - name: Run tests and coverage
      run: |
        pipenv run python manage.py check
        # pytest -rxXs
        pipenv run coverage run --source=$SOURCE_FOLDER -m py.test -rxXs
        pipenv coveralls
      env:
        SOURCE_FOLDER: safe_transaction_service
        DJANGO_SETTINGS_MODULE: config.settings.test
        DATABASE_URL: psql://postgres:postgres@localhost/postgres
        ETHEREUM_NODE_URL: http://localhost:8545
        ETHEREUM_TRACING_NODE_URL: http://localhost:8545
        REDIS_URL: redis://localhost:6379/0
        CELERY_BROKER_URL: redis://localhost:6379/0
        ETHEREUM_MAINNET_NODE: ${{ secrets.ETHEREUM_MAINNET_NODE }}
        COINMARKETCAP_API_TOKEN: ${{ secrets.COINMARKETCAP_API_TOKEN }}
    - name: Dockerhub login
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Deploy Master
      if: github.ref == 'refs/heads/master'
      run: bash scripts/deploy_docker_github.sh staging
      env:
        DOCKERHUB_PROJECT: safe-transaction-service
    - name: Deploy Develop
      if: github.ref == 'refs/heads/develop'
      run: bash scripts/deploy_docker_github.sh develop
      env:
        DOCKERHUB_PROJECT: safe-transaction-service
    - name: Deploy Tag
      if: startsWith(github.ref, 'refs/tags/')
      run: echo Tag is ${GITHUB_REF##*/}
      env:
        DOCKERHUB_PROJECT: safe-transaction-service
